"""
Django settings for dsam project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/
# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = enviroment.SECRET_KEY
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(os.environ.get('DEBUG', default=0))

ALLOWED_HOSTS = [
    'dancesport.am',
    'https://dancesport.am',
    'http://dancesport.am'
]

if DEBUG:
    from django.core.management.utils import get_random_secret_key
    SECRET_KEY = get_random_secret_key()
    ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS').split(',')
    RECAPTCHA_PUBLIC_KEY = os.environ.get('RECAPTCHAPK')
    RECAPTCHA_PRIVATE_KEY = os.environ.get('RECAPTCHASK')
    CSRF_TRUSTED_ORIGINS = [
        'https://127.0.0.1:8000',
        'http://127.0.0.1:8000'
    ]
    CORS_ALLOWED_ORIGINS = [
        'https://127.0.0.1:8000',
        'http://127.0.0.1:8000'
    ]
    CORS_ALLOW_HEADERS = [
        'Content-Type',
        'Access-Control-Allow-Origin',
        'Access-Control-Allow-Methods',
        'X-CSRFToken',
    ]
else:
    SECRET_KEY = os.environ.get('SECRET_KEY')
    CSRF_TRUSTED_ORIGINS = [
        'https://dancesport.am',
        'http://dancesport.am'
    ]
    CORS_ALLOWED_ORIGINS = [
        'https://dancesport.am',
        'http://dancesport.am'
    ]
    CORS_ALLOW_HEADERS = [
        'Content-Type',
        'Access-Control-Allow-Origin',
        'Access-Control-Allow-Methods',
        'X-CSRFToken',
    ]
    



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'captcha',
    'rest_framework', # Rest API в django
    'crm_for_next', # приложение а-ля crm, папка в корне ./backend<-
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'dsam.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dsam.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.environ.get('SQL_ENGINE','django.db.backends.sqlite3'),
        'NAME': os.environ.get('SQL_DB',BASE_DIR / 'db.sqlite3'),
        'USER': os.environ.get('SQL_USER'),
        'PASSWORD': os.environ.get('SQL_PASSWORD'),
        'HOST': os.environ.get('SQL_HOST'),
        'PORT': os.environ.get('SQL_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny'
    ]
}


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Yerevan'

USE_I18N = True

USE_TZ = True
TIME_INPUT_FORMATS = ['%H:%M']

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_METHODS = [
    'POST',
    'GET'
]
